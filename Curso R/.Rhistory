install.packages("tidyverse")
library(tidyverse)
library(ggplot2)
data("diamonds")
View(diamonds)
head()
head(6)
head(diamonds)
str(diamonds)
colnames(diamonds)
library(tidyverse)
mutate(diamonds, caract_2= carat*100)
subset(diamonds)
#instalar tidyverse
install.packages(tidyverse)
#instalar tidyverse
install.packages("tidyverse")
install.packages("tidyverse")
#instalar tidyverse
install.packages("tidyverse")
install.packages("tidyverse")
# Crear vectores de nombres y edades
names <- c("Ana", "Luis", "María", "Pedro")
age <- c(25, 30, 28, 22)
# Crear el marco de datos
people <- data.frame(names, age)
head(people)
str(people)
#instalar tidyverse
install.packages("tidyverse")
install.packages("tidyverse")
#instalar tidyverse
install.packages("tidyverse")
glimpse(people)
library(dplyr)
glimpse(people)
library("tidyverse")
# Crear vectores de nombres y edades
names <- c("Ana", "Luis", "María", "Pedro")
age <- c(25, 30, 28, 22)
# Crear el marco de datos
people <- data.frame(names, age)
# Crear vectores de nombres y edades
names <- c("Ana", "Luis", "María", "Pedro")
age <- c(25, 30, 28, 22)
# Crear el marco de datos
people <- data.frame(names, age)
# Crear vectores de nombres y edades
names <- c("Ana", "Luis", "María", "Pedro")
age <- c(25, 30, 28, 22)
# Crear el marco de datos
people <- data.frame(names, age)
str(people)
#Vista rápida con tidyverse
glimpse(people)
# Agregar una nueva columna con edad futura
mutate(people, age_in_20 = age + 20)
data()
data()
data(mtcars)
install.packages("here")
library("here")
install.packages("skimr")
library(skimr)
installed.packages("janitor")
install.packages("janitor")
install.packages("dplyr")
install.packages("palmerpenguins")
library('palmerpenguins')
skim_whiout_charts(penguins)
skim_whitout_charts(penguins)
skim_without_charts(penguins)
install.packages("skimr")
install.packages("skimr")
skim_without_charts(penguins)
install.packages("skimr")
install.packages("skimr")
skim_without_charts(penguins)
skimr_without_charts(penguins)
skim(penguins)
library(skimr)
ls("package:skimr")
skim_without_charts
skim_without_charts(penguins)
library("palmerpenguins")
skim_without_charts(penguins)
glimpse(penguins)
library(dyplr)
library(dplyr)
glimpse(penguins)
head(penguins)
+select(-species)
+ select(-species)
+ select(-island)
+ select(- island)
penguins%>%
select(-species)
penguins%>%
rename(island_new=island)
penguins_filtered <- penguins_clean %>%
filter(!is.na(body_mass_g)) %>%                # Eliminar filas con NA en masa corporal
filter(sex == "female")
penguins_clean <- penguins_clean %>%
mutate(
bill_ratio = bill_length_mm / bill_depth_mm  # Nueva columna: proporción del pico
)
penguins_clean <- penguins %>%
select(-species) %>%               # Eliminar columna 'species'
rename(island_new = island)        # Renombrar columna 'island'
penguins_clean <- penguins_clean %>%
mutate(
bill_ratio = bill_length_mm / bill_depth_mm  # Nueva columna: proporción del pico
)
penguins_filtered <- penguins_clean %>%
filter(!is.na(body_mass_g)) %>%                # Eliminar filas con NA en masa corporal
filter(sex == "female")                        # Filtrar solo hembras
penguins_summary <- penguins %>%
group_by(species) %>%
summarise(
count = n(),
avg_mass = mean(body_mass_g, na.rm = TRUE),
avg_flipper = mean(flipper_length_mm, na.rm = TRUE)
)
penguins_sorted <- penguins %>%
arrange(desc(body_mass_g))  # Ordenar de mayor a menor masa corporal
print(penguins_clean)
print(penguins_filtered)
print(penguins_summary)
library(tidyverse)
penguins %>% arrange(bill_length_mm)
penguins %<% arrange(bill_length_mm)
penguins %>% arrange(-bill_length_mm)
penguins_new <- penguins %>% arrange(-bill_length_mm)
view(penguins_new)
penguins  %>% group_by(island)
penguins  %>% group_by(island) drop_na() %>%
penguins  %>% group_by(island) drop_na() %>% sumarize(mean_bill_length_mm)
penguins %>%
group_by(island) %>%
drop_na() %>%
summarise(mean_bill_length_mm = mean(bill_length_mm))
penguins %>%
group_by(island) %>%
drop_na() %>%
summarise(mean_bill_length_mm = max(bill_length_mm))
penguins %>%
group_by(island) %>%
drop_na() %>%
summarise(mean_bill_length_mm = min(bill_length_mm))
penguins %>%
filter(species=="Adelie")
knitr::opts_chunk$set(echo = TRUE)
install.packages("tidyverse")
install.packages("skimr")
install.packages("janitor")
install.packages("tidyverse")
install.packages("skimr")
install.packages("skimr")
library(tidyverse)
library(skimr)
library(janitor)
bookings_df <- read_csv("hotel_bookings.csv")
bookings_df <- read_csv("hotel_bookings.csv")
head(bookings_df)
bookings_df <- readr::read_csv("hotel_bookings.csv", locale = locale(encoding = "UTF-8"))
head(bookings_df)
bookings_df <- readr::read_csv("hotel_bookings.csv", locale = locale(encoding = "latin1"))
head(bookings_df)
str(bookings_df)
glimpse(bookings_df)
trimmed_df <- bookings_df %>%
select(hotel, is_canceled, lead_time)
trimmed_df <- trimmed_df %>%
rename(hotel_type = hotel)
example_df <- bookings_df %>%
select(arrival_date_year, arrival_date_month) %>%
unite(arrival_month_year, c("arrival_date_month", "arrival_date_year"), sep = " ")
example_df <- bookings_df %>%
mutate(guests = adults + children + babies)
summary_df <- bookings_df %>%
summarize(
number_canceled = sum(is_canceled, na.rm = TRUE),
average_lead_time = mean(lead_time, na.rm = TRUE)
)
summary_df
bookings_df <- bookings_df %>%
clean_names()
clean_df <- bookings_df %>%
drop_na()
colnames(bookings_df)
example_df <- bookings_df %>%
mutate(guests = adultos + ni_os + beb_s)
head(example_df)
bookings_df <- bookings_df %>%
clean_names()
clean_df <- bookings_df %>%
drop_na()
example_df <- bookings_df %>%
mutate(guests = adultos + ni_os + beb_s)
head(example_df)
penguins %>%
arrange(bill_length_mm)
install.packages('Tmisc')
view(data)
view(quartet)
View(quartet)
library(Tmisc)
data(quartet)
View(quartet)
View(quartet)
install.packages('Tmisc')
library(Tmisc)
data(quartet)
View(quartet)
quartet %>%
group_by(set) %>%
sumarize(mean(x), sd(x), mean(x), sd(y), cor(x,y))
install.packages("Tmisc")
install.packages('Tmisc')
library(Tmisc)
data(quartet)
View(quartet)
quartet %>%
group_by(set) %>%
summarise(mean(x), sd(x), mean(x), sd(y), cor(x,y))
install.packages("Tmisc")
install.packages('Tmisc')
library(Tmisc)
data(quartet)
View(quartet)
quartet %>%
group_by(set) %>%
summarise(mean(x), sd(x), mean(x), sd(y), cor(x,y))
install.packages('Tmisc')
library(Tmisc)
data(quartet)
View(quartet)
quartet %>%
group_by(set) %>%
summarise(mean(x), sd(x), mean(x), sd(y), cor(x,y))
#Instalar los paquetes
install.packages('Tmisc')
library(Tmisc)
data(quartet)
View(quartet)
quartet %>%
group_by(set) %>%
summarize(mean(x), sd(x), mean(x), sd(y), cor(x,y))
install.packages("Tmisc")
#Instalar los paquetes
install.packages('Tmisc')
library(Tmisc)
data(quartet)
View(quartet)
quartet %>%
group_by(set) %>%
summarize(mean(x), sd(x), mean(x), sd(y), cor(x,y))
library(Tmisc)
data(quartet)
View(quartet)
quartet %>%
group_by(set) %>%
summarize(mean(x), sd(x), mean(x), sd(y), cor(x,y))
#Instalar los paquetes
install.packages('Tmisc')
library(Tmisc)
data(quartet)
View(quartet)
quartet %>%
group_by(set) %>%
summarise(mean(x), sd(x), mean(y), sd(y), cor(x,y))
install.packages("dplyr")
library(dplyr)
install.packages('Tmisc')
library(Tmisc)
data(quartet)
View(quartet)
quartet %>%
group_by(set) %>%
summarise(mean(x), sd(x), mean(y), sd(y), cor(x,y))
ggplot(quartet, aes(x,y)) + geom_point() + geom_smooth(method=ln,se:FALSE)+facet_wrap(-set
ggplot(quartet, aes(x,y)) + geom_point() + geom_smooth(method=ln,se:FALSE)+facet_wrap(-set)
ggplot(quartet, aes(x,y)) + geom_point() + geom_smooth(method=ln,se:FALSE)+facet_wrap(-set)
install.packages(gglpt2)
install.packages(ggplot2)
install.packages("ggplot2")
#Crear las gráficas
ggplot(quartet, aes(x,y)) + geom_point() + geom_smooth(method=ln,se:FALSE)+facet_wrap(-set)
#Crear las gráficas
ggplot2(quartet, aes(x,y)) + geom_point() + geom_smooth(method=ln,se:FALSE)+facet_wrap(-set)
library(ggplot2)
ggplot(quartet, aes(x,y)) + geom_point() + geom_smooth(method=ln,se:FALSE)+facet_wrap(-set)
ggplot(quartet, aes(x,y)) + geom_point() + geom_smooth(method=lm,se:FALSE)+facet_wrap(-set)
ggplot(quartet, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~set)
install.packages('datasauRus')
library('datasauRus')
datasaurus_dozen %>%
group_by(dataset) %>%
summarise(
mean_x = mean(x),
mean_y = mean(y),
sd_x = sd(x),
sd_y = sd(y),
correlation = cor(x, y)
)
ggplot(datasaurus_dozen, aes(x = x, y = y)) +
geom_point(color = "#3366CC", alpha = 0.6) +
facet_wrap(~dataset, ncol = 4) +
theme_minimal() +
labs(title = "Datasaurus Dozen",
subtitle = "Todos estos conjuntos tienen estadísticas similares, pero distribuciones muy diferentes")
install.packages("SimDesign")
library(SimDesign)
install.packages("parallelly", type = "source")
install.packages("future", type = "source")
